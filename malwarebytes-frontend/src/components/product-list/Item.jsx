import React, { useState, useEffect } from "react";
import { useDispatch } from "react-redux";
import { Input, Modal } from "antd";
import { ShoppingCartOutlined } from "@ant-design/icons";
import { addChange } from "../../store/modal/slice";
import { updateCart } from "../../store/cart/slice";

import ItemModal from "./ItemModal";

import "./product-list.css";

const Item = ({ data }) => {
  const dispatch = useDispatch();
  const [visible, setVisible] = useState(false);
  const itemKey = `product-${data.id}`;
  const initialQuantity = localStorage.getItem(itemKey) || 0;
  const [quantity, setQuantity] = useState(initialQuantity);

  useEffect(() => {
    const onStorageChange = () => {
      const newValue = localStorage.getItem(itemKey) || 0;
      const change = newValue - quantity;
      if (change !== 0) {
        dispatch(
          addChange({
            key: data.id,
            value: change,
          })
        );
        setQuantity(newValue);
      }
    };
    window.addEventListener("storage", onStorageChange);

    return () => window.removeEventListener("storage", onStorageChange);
  });

  useEffect(() => {
    const oldValue = localStorage.getItem(itemKey) || 0;
    const change = quantity - oldValue;
    if (change !== 0) {
      localStorage.setItem(itemKey, quantity);
      dispatch(updateCart());
    }
  }, [quantity, itemKey, dispatch]);

  const onQuantityChange = (value) => {
    if (value > 1000) {
      value = 1000;
    } else if (value < 0) {
      value = 0;
    }
    setQuantity(value);
  };

  const openModal = () => {
    setVisible(true);
  };

  return (
    <>
      <div className="product-list-item" onClick={openModal}>
        <div>{data.name}</div>
        <div
          onClick={(e) => {
            e.stopPropagation();
          }}
        >
          <Input
            maxLength="5"
            type="number"
            style={{ width: "100px" }}
            prefix={<ShoppingCartOutlined />}
            value={quantity}
            onChange={(e) => onQuantityChange(e.target.value)}
          />
        </div>
      </div>
      <Modal
        visible={visible}
        title={data.name}
        footer={null}
        icon={<ShoppingCartOutlined />}
        onCancel={() => setVisible(false)}
      >
        <ItemModal
          item={data}
          onQuantityChange={onQuantityChange}
          quantity={quantity}
          closeModal={() => setVisible(false)}
        />
      </Modal>
    </>
  );
};

export default Item;
